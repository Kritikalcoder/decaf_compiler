Grammar

    0 $accept: program $end

    1 program: CLASS ID OPEN_CB field_decl_list method_decl_list CLOSE_CB

    2 field_decl_list: %empty
    3                | field_decl_list field_decl

    4 field_decl: TYPE field_decl_var_list SEMICOLON

    5 field_decl_var_list: field_decl_var
    6                    | field_decl_var COMMA field_decl_var_list

    7 field_decl_var: ID
    8               | ID OPEN_SB INT_LIT CLOSE_SB

    9 method_decl_list: %empty
   10                 | method_decl method_decl_list

   11 method_decl: TYPE ID OPEN_P method_arg_list CLOSE_P block
   12            | VOID ID OPEN_P method_arg_list CLOSE_P block

   13 method_arg_list: %empty
   14                | TYPE ID method_arg

   15 method_arg: %empty
   16           | COMMA TYPE ID method_arg

   17 block: OPEN_CB var_decl_list statement_list CLOSE_CB

   18 var_decl_list: %empty
   19              | var_decl_list var_decl

   20 var_decl: TYPE var_list SEMICOLON

   21 var_list: ID
   22         | var_list COMMA ID

   23 statement_list: %empty
   24               | statement_list statement

   25 statement: location assign_op expr SEMICOLON
   26          | method_call SEMICOLON
   27          | IF OPEN_P expr CLOSE_P block
   28          | IF OPEN_P expr CLOSE_P block ELSE block
   29          | FOR ID ASSIGN expr COMMA expr block
   30          | RETURN SEMICOLON
   31          | RETURN expr SEMICOLON
   32          | BREAK SEMICOLON
   33          | CONTINUE SEMICOLON
   34          | block

   35 assign_op: ASSIGN
   36          | PLUSEQ
   37          | MINUSEQ

   38 method_call: ID OPEN_P method_call_arg_list CLOSE_P
   39            | CALLOUT OPEN_P STRING_LIT callout_arg_list CLOSE_P

   40 method_call_arg_list: %empty
   41                     | expr method_call_arg

   42 method_call_arg: %empty
   43                | COMMA expr method_call_arg

   44 callout_arg_list: %empty
   45                 | COMMA callout_arg callout_arg_list

   46 callout_arg: expr
   47            | STRING_LIT

   48 location: ID
   49         | ID OPEN_SB expr CLOSE_SB

   50 expr: location
   51     | method_call
   52     | literal
   53     | expr PLUS expr
   54     | expr MINUS expr
   55     | expr MULT expr
   56     | expr DIV expr
   57     | expr MOD expr
   58     | expr LESS expr
   59     | expr GREAT expr
   60     | expr LESSE expr
   61     | expr GREATE expr
   62     | expr EQ expr
   63     | expr NEQ expr
   64     | expr OR expr
   65     | expr AND expr
   66     | MINUS expr
   67     | NOT expr
   68     | OPEN_P expr CLOSE_P

   69 literal: INT_LIT
   70        | CHAR_LIT
   71        | BOOL_LIT


Terminals, with rules where they appear

$end (0) 0
error (256)
CALLOUT (258) 39
TYPE (259) 4 11 14 16 20
VOID (260) 12
CLASS (261) 1
IF (262) 27 28
ELSE (263) 28
FOR (264) 29
RETURN (265) 30 31
BREAK (266) 32
CONTINUE (267) 33
COMMA (268) 6 16 22 29 43 45
SEMICOLON (269) 4 20 25 26 30 31 32 33
BOOL_LIT (270) 71
CHAR_LIT (271) 70
STRING_LIT (272) 39 47
ID (273) 1 7 8 11 12 14 16 21 22 29 38 48 49
INT_LIT (274) 8 69
OPEN_CB (275) 1 17
CLOSE_CB (276) 1 17
OPEN_SB (277) 8 49
CLOSE_SB (278) 8 49
OPEN_P (279) 11 12 27 28 38 39 68
CLOSE_P (280) 11 12 27 28 38 39 68
AND (281) 65
OR (282) 64
NOT (283) 67
PLUS (284) 53
MINUS (285) 54 66
MULT (286) 55
DIV (287) 56
MOD (288) 57
LESS (289) 58
GREAT (290) 59
LESSE (291) 60
GREATE (292) 61
EQ (293) 62
NEQ (294) 63
ASSIGN (295) 29 35
PLUSEQ (296) 36
MINUSEQ (297) 37


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
field_decl_list (45)
    on left: 2 3, on right: 1 3
field_decl (46)
    on left: 4, on right: 3
field_decl_var_list (47)
    on left: 5 6, on right: 4 6
field_decl_var (48)
    on left: 7 8, on right: 5 6
method_decl_list (49)
    on left: 9 10, on right: 1 10
method_decl (50)
    on left: 11 12, on right: 10
method_arg_list (51)
    on left: 13 14, on right: 11 12
method_arg (52)
    on left: 15 16, on right: 14 16
block (53)
    on left: 17, on right: 11 12 27 28 29 34
var_decl_list (54)
    on left: 18 19, on right: 17 19
var_decl (55)
    on left: 20, on right: 19
var_list (56)
    on left: 21 22, on right: 20 22
statement_list (57)
    on left: 23 24, on right: 17 24
statement (58)
    on left: 25 26 27 28 29 30 31 32 33 34, on right: 24
assign_op (59)
    on left: 35 36 37, on right: 25
method_call (60)
    on left: 38 39, on right: 26 51
method_call_arg_list (61)
    on left: 40 41, on right: 38
method_call_arg (62)
    on left: 42 43, on right: 41 43
callout_arg_list (63)
    on left: 44 45, on right: 39 45
callout_arg (64)
    on left: 46 47, on right: 45
location (65)
    on left: 48 49, on right: 25 50
expr (66)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68, on right: 25 27 28 29 31 41 43 46 49 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67 68
literal (67)
    on left: 69 70 71, on right: 52


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . ID OPEN_CB field_decl_list method_decl_list CLOSE_CB

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS ID . OPEN_CB field_decl_list method_decl_list CLOSE_CB

    OPEN_CB  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS ID OPEN_CB . field_decl_list method_decl_list CLOSE_CB

    $default  reduce using rule 2 (field_decl_list)

    field_decl_list  go to state 6


State 6

    1 program: CLASS ID OPEN_CB field_decl_list . method_decl_list CLOSE_CB
    3 field_decl_list: field_decl_list . field_decl

    TYPE  shift, and go to state 7
    VOID  shift, and go to state 8

    $default  reduce using rule 9 (method_decl_list)

    field_decl        go to state 9
    method_decl_list  go to state 10
    method_decl       go to state 11


State 7

    4 field_decl: TYPE . field_decl_var_list SEMICOLON
   11 method_decl: TYPE . ID OPEN_P method_arg_list CLOSE_P block

    ID  shift, and go to state 12

    field_decl_var_list  go to state 13
    field_decl_var       go to state 14


State 8

   12 method_decl: VOID . ID OPEN_P method_arg_list CLOSE_P block

    ID  shift, and go to state 15


State 9

    3 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 3 (field_decl_list)


State 10

    1 program: CLASS ID OPEN_CB field_decl_list method_decl_list . CLOSE_CB

    CLOSE_CB  shift, and go to state 16


State 11

   10 method_decl_list: method_decl . method_decl_list

    TYPE  shift, and go to state 17
    VOID  shift, and go to state 8

    $default  reduce using rule 9 (method_decl_list)

    method_decl_list  go to state 18
    method_decl       go to state 11


State 12

    7 field_decl_var: ID .
    8               | ID . OPEN_SB INT_LIT CLOSE_SB
   11 method_decl: TYPE ID . OPEN_P method_arg_list CLOSE_P block

    OPEN_SB  shift, and go to state 19
    OPEN_P   shift, and go to state 20

    $default  reduce using rule 7 (field_decl_var)


State 13

    4 field_decl: TYPE field_decl_var_list . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 14

    5 field_decl_var_list: field_decl_var .
    6                    | field_decl_var . COMMA field_decl_var_list

    COMMA  shift, and go to state 22

    $default  reduce using rule 5 (field_decl_var_list)


State 15

   12 method_decl: VOID ID . OPEN_P method_arg_list CLOSE_P block

    OPEN_P  shift, and go to state 23


State 16

    1 program: CLASS ID OPEN_CB field_decl_list method_decl_list CLOSE_CB .

    $default  reduce using rule 1 (program)


State 17

   11 method_decl: TYPE . ID OPEN_P method_arg_list CLOSE_P block

    ID  shift, and go to state 24


State 18

   10 method_decl_list: method_decl method_decl_list .

    $default  reduce using rule 10 (method_decl_list)


State 19

    8 field_decl_var: ID OPEN_SB . INT_LIT CLOSE_SB

    INT_LIT  shift, and go to state 25


State 20

   11 method_decl: TYPE ID OPEN_P . method_arg_list CLOSE_P block

    TYPE  shift, and go to state 26

    $default  reduce using rule 13 (method_arg_list)

    method_arg_list  go to state 27


State 21

    4 field_decl: TYPE field_decl_var_list SEMICOLON .

    $default  reduce using rule 4 (field_decl)


State 22

    6 field_decl_var_list: field_decl_var COMMA . field_decl_var_list

    ID  shift, and go to state 28

    field_decl_var_list  go to state 29
    field_decl_var       go to state 14


State 23

   12 method_decl: VOID ID OPEN_P . method_arg_list CLOSE_P block

    TYPE  shift, and go to state 26

    $default  reduce using rule 13 (method_arg_list)

    method_arg_list  go to state 30


State 24

   11 method_decl: TYPE ID . OPEN_P method_arg_list CLOSE_P block

    OPEN_P  shift, and go to state 20


State 25

    8 field_decl_var: ID OPEN_SB INT_LIT . CLOSE_SB

    CLOSE_SB  shift, and go to state 31


State 26

   14 method_arg_list: TYPE . ID method_arg

    ID  shift, and go to state 32


State 27

   11 method_decl: TYPE ID OPEN_P method_arg_list . CLOSE_P block

    CLOSE_P  shift, and go to state 33


State 28

    7 field_decl_var: ID .
    8               | ID . OPEN_SB INT_LIT CLOSE_SB

    OPEN_SB  shift, and go to state 19

    $default  reduce using rule 7 (field_decl_var)


State 29

    6 field_decl_var_list: field_decl_var COMMA field_decl_var_list .

    $default  reduce using rule 6 (field_decl_var_list)


State 30

   12 method_decl: VOID ID OPEN_P method_arg_list . CLOSE_P block

    CLOSE_P  shift, and go to state 34


State 31

    8 field_decl_var: ID OPEN_SB INT_LIT CLOSE_SB .

    $default  reduce using rule 8 (field_decl_var)


State 32

   14 method_arg_list: TYPE ID . method_arg

    COMMA  shift, and go to state 35

    $default  reduce using rule 15 (method_arg)

    method_arg  go to state 36


State 33

   11 method_decl: TYPE ID OPEN_P method_arg_list CLOSE_P . block

    OPEN_CB  shift, and go to state 37

    block  go to state 38


State 34

   12 method_decl: VOID ID OPEN_P method_arg_list CLOSE_P . block

    OPEN_CB  shift, and go to state 37

    block  go to state 39


State 35

   16 method_arg: COMMA . TYPE ID method_arg

    TYPE  shift, and go to state 40


State 36

   14 method_arg_list: TYPE ID method_arg .

    $default  reduce using rule 14 (method_arg_list)


State 37

   17 block: OPEN_CB . var_decl_list statement_list CLOSE_CB

    $default  reduce using rule 18 (var_decl_list)

    var_decl_list  go to state 41


State 38

   11 method_decl: TYPE ID OPEN_P method_arg_list CLOSE_P block .

    $default  reduce using rule 11 (method_decl)


State 39

   12 method_decl: VOID ID OPEN_P method_arg_list CLOSE_P block .

    $default  reduce using rule 12 (method_decl)


State 40

   16 method_arg: COMMA TYPE . ID method_arg

    ID  shift, and go to state 42


State 41

   17 block: OPEN_CB var_decl_list . statement_list CLOSE_CB
   19 var_decl_list: var_decl_list . var_decl

    TYPE  shift, and go to state 43

    $default  reduce using rule 23 (statement_list)

    var_decl        go to state 44
    statement_list  go to state 45


State 42

   16 method_arg: COMMA TYPE ID . method_arg

    COMMA  shift, and go to state 35

    $default  reduce using rule 15 (method_arg)

    method_arg  go to state 46


State 43

   20 var_decl: TYPE . var_list SEMICOLON

    ID  shift, and go to state 47

    var_list  go to state 48


State 44

   19 var_decl_list: var_decl_list var_decl .

    $default  reduce using rule 19 (var_decl_list)


State 45

   17 block: OPEN_CB var_decl_list statement_list . CLOSE_CB
   24 statement_list: statement_list . statement

    CALLOUT   shift, and go to state 49
    IF        shift, and go to state 50
    FOR       shift, and go to state 51
    RETURN    shift, and go to state 52
    BREAK     shift, and go to state 53
    CONTINUE  shift, and go to state 54
    ID        shift, and go to state 55
    OPEN_CB   shift, and go to state 37
    CLOSE_CB  shift, and go to state 56

    block        go to state 57
    statement    go to state 58
    method_call  go to state 59
    location     go to state 60


State 46

   16 method_arg: COMMA TYPE ID method_arg .

    $default  reduce using rule 16 (method_arg)


State 47

   21 var_list: ID .

    $default  reduce using rule 21 (var_list)


State 48

   20 var_decl: TYPE var_list . SEMICOLON
   22 var_list: var_list . COMMA ID

    COMMA      shift, and go to state 61
    SEMICOLON  shift, and go to state 62


State 49

   39 method_call: CALLOUT . OPEN_P STRING_LIT callout_arg_list CLOSE_P

    OPEN_P  shift, and go to state 63


State 50

   27 statement: IF . OPEN_P expr CLOSE_P block
   28          | IF . OPEN_P expr CLOSE_P block ELSE block

    OPEN_P  shift, and go to state 64


State 51

   29 statement: FOR . ID ASSIGN expr COMMA expr block

    ID  shift, and go to state 65


State 52

   30 statement: RETURN . SEMICOLON
   31          | RETURN . expr SEMICOLON

    CALLOUT    shift, and go to state 49
    SEMICOLON  shift, and go to state 66
    BOOL_LIT   shift, and go to state 67
    CHAR_LIT   shift, and go to state 68
    ID         shift, and go to state 55
    INT_LIT    shift, and go to state 69
    OPEN_P     shift, and go to state 70
    NOT        shift, and go to state 71
    MINUS      shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 75
    literal      go to state 76


State 53

   32 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 54

   33 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 78


State 55

   38 method_call: ID . OPEN_P method_call_arg_list CLOSE_P
   48 location: ID .
   49         | ID . OPEN_SB expr CLOSE_SB

    OPEN_SB  shift, and go to state 79
    OPEN_P   shift, and go to state 80

    $default  reduce using rule 48 (location)


State 56

   17 block: OPEN_CB var_decl_list statement_list CLOSE_CB .

    $default  reduce using rule 17 (block)


State 57

   34 statement: block .

    $default  reduce using rule 34 (statement)


State 58

   24 statement_list: statement_list statement .

    $default  reduce using rule 24 (statement_list)


State 59

   26 statement: method_call . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 60

   25 statement: location . assign_op expr SEMICOLON

    ASSIGN   shift, and go to state 82
    PLUSEQ   shift, and go to state 83
    MINUSEQ  shift, and go to state 84

    assign_op  go to state 85


State 61

   22 var_list: var_list COMMA . ID

    ID  shift, and go to state 86


State 62

   20 var_decl: TYPE var_list SEMICOLON .

    $default  reduce using rule 20 (var_decl)


State 63

   39 method_call: CALLOUT OPEN_P . STRING_LIT callout_arg_list CLOSE_P

    STRING_LIT  shift, and go to state 87


State 64

   27 statement: IF OPEN_P . expr CLOSE_P block
   28          | IF OPEN_P . expr CLOSE_P block ELSE block

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 88
    literal      go to state 76


State 65

   29 statement: FOR ID . ASSIGN expr COMMA expr block

    ASSIGN  shift, and go to state 89


State 66

   30 statement: RETURN SEMICOLON .

    $default  reduce using rule 30 (statement)


State 67

   71 literal: BOOL_LIT .

    $default  reduce using rule 71 (literal)


State 68

   70 literal: CHAR_LIT .

    $default  reduce using rule 70 (literal)


State 69

   69 literal: INT_LIT .

    $default  reduce using rule 69 (literal)


State 70

   68 expr: OPEN_P . expr CLOSE_P

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 90
    literal      go to state 76


State 71

   67 expr: NOT . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 91
    literal      go to state 76


State 72

   66 expr: MINUS . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 92
    literal      go to state 76


State 73

   51 expr: method_call .

    $default  reduce using rule 51 (expr)


State 74

   50 expr: location .

    $default  reduce using rule 50 (expr)


State 75

   31 statement: RETURN expr . SEMICOLON
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    SEMICOLON  shift, and go to state 93
    AND        shift, and go to state 94
    OR         shift, and go to state 95
    PLUS       shift, and go to state 96
    MINUS      shift, and go to state 97
    MULT       shift, and go to state 98
    DIV        shift, and go to state 99
    MOD        shift, and go to state 100
    LESS       shift, and go to state 101
    GREAT      shift, and go to state 102
    LESSE      shift, and go to state 103
    GREATE     shift, and go to state 104
    EQ         shift, and go to state 105
    NEQ        shift, and go to state 106


State 76

   52 expr: literal .

    $default  reduce using rule 52 (expr)


State 77

   32 statement: BREAK SEMICOLON .

    $default  reduce using rule 32 (statement)


State 78

   33 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 33 (statement)


State 79

   49 location: ID OPEN_SB . expr CLOSE_SB

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 107
    literal      go to state 76


State 80

   38 method_call: ID OPEN_P . method_call_arg_list CLOSE_P

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    $default  reduce using rule 40 (method_call_arg_list)

    method_call           go to state 73
    method_call_arg_list  go to state 108
    location              go to state 74
    expr                  go to state 109
    literal               go to state 76


State 81

   26 statement: method_call SEMICOLON .

    $default  reduce using rule 26 (statement)


State 82

   35 assign_op: ASSIGN .

    $default  reduce using rule 35 (assign_op)


State 83

   36 assign_op: PLUSEQ .

    $default  reduce using rule 36 (assign_op)


State 84

   37 assign_op: MINUSEQ .

    $default  reduce using rule 37 (assign_op)


State 85

   25 statement: location assign_op . expr SEMICOLON

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 110
    literal      go to state 76


State 86

   22 var_list: var_list COMMA ID .

    $default  reduce using rule 22 (var_list)


State 87

   39 method_call: CALLOUT OPEN_P STRING_LIT . callout_arg_list CLOSE_P

    COMMA  shift, and go to state 111

    $default  reduce using rule 44 (callout_arg_list)

    callout_arg_list  go to state 112


State 88

   27 statement: IF OPEN_P expr . CLOSE_P block
   28          | IF OPEN_P expr . CLOSE_P block ELSE block
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    CLOSE_P  shift, and go to state 113
    AND      shift, and go to state 94
    OR       shift, and go to state 95
    PLUS     shift, and go to state 96
    MINUS    shift, and go to state 97
    MULT     shift, and go to state 98
    DIV      shift, and go to state 99
    MOD      shift, and go to state 100
    LESS     shift, and go to state 101
    GREAT    shift, and go to state 102
    LESSE    shift, and go to state 103
    GREATE   shift, and go to state 104
    EQ       shift, and go to state 105
    NEQ      shift, and go to state 106


State 89

   29 statement: FOR ID ASSIGN . expr COMMA expr block

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 114
    literal      go to state 76


State 90

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr
   68     | OPEN_P expr . CLOSE_P

    CLOSE_P  shift, and go to state 115
    AND      shift, and go to state 94
    OR       shift, and go to state 95
    PLUS     shift, and go to state 96
    MINUS    shift, and go to state 97
    MULT     shift, and go to state 98
    DIV      shift, and go to state 99
    MOD      shift, and go to state 100
    LESS     shift, and go to state 101
    GREAT    shift, and go to state 102
    LESSE    shift, and go to state 103
    GREATE   shift, and go to state 104
    EQ       shift, and go to state 105
    NEQ      shift, and go to state 106


State 91

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr
   67     | NOT expr .

    $default  reduce using rule 67 (expr)


State 92

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr
   66     | MINUS expr .

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 66 (expr)


State 93

   31 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 31 (statement)


State 94

   65 expr: expr AND . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 116
    literal      go to state 76


State 95

   64 expr: expr OR . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 117
    literal      go to state 76


State 96

   53 expr: expr PLUS . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 118
    literal      go to state 76


State 97

   54 expr: expr MINUS . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 119
    literal      go to state 76


State 98

   55 expr: expr MULT . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 120
    literal      go to state 76


State 99

   56 expr: expr DIV . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 121
    literal      go to state 76


State 100

   57 expr: expr MOD . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 122
    literal      go to state 76


State 101

   58 expr: expr LESS . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 123
    literal      go to state 76


State 102

   59 expr: expr GREAT . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 124
    literal      go to state 76


State 103

   60 expr: expr LESSE . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 125
    literal      go to state 76


State 104

   61 expr: expr GREATE . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 126
    literal      go to state 76


State 105

   62 expr: expr EQ . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 127
    literal      go to state 76


State 106

   63 expr: expr NEQ . expr

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 128
    literal      go to state 76


State 107

   49 location: ID OPEN_SB expr . CLOSE_SB
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    CLOSE_SB  shift, and go to state 129
    AND       shift, and go to state 94
    OR        shift, and go to state 95
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    MULT      shift, and go to state 98
    DIV       shift, and go to state 99
    MOD       shift, and go to state 100
    LESS      shift, and go to state 101
    GREAT     shift, and go to state 102
    LESSE     shift, and go to state 103
    GREATE    shift, and go to state 104
    EQ        shift, and go to state 105
    NEQ       shift, and go to state 106


State 108

   38 method_call: ID OPEN_P method_call_arg_list . CLOSE_P

    CLOSE_P  shift, and go to state 130


State 109

   41 method_call_arg_list: expr . method_call_arg
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    COMMA   shift, and go to state 131
    AND     shift, and go to state 94
    OR      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    MULT    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    LESS    shift, and go to state 101
    GREAT   shift, and go to state 102
    LESSE   shift, and go to state 103
    GREATE  shift, and go to state 104
    EQ      shift, and go to state 105
    NEQ     shift, and go to state 106

    $default  reduce using rule 42 (method_call_arg)

    method_call_arg  go to state 132


State 110

   25 statement: location assign_op expr . SEMICOLON
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    SEMICOLON  shift, and go to state 133
    AND        shift, and go to state 94
    OR         shift, and go to state 95
    PLUS       shift, and go to state 96
    MINUS      shift, and go to state 97
    MULT       shift, and go to state 98
    DIV        shift, and go to state 99
    MOD        shift, and go to state 100
    LESS       shift, and go to state 101
    GREAT      shift, and go to state 102
    LESSE      shift, and go to state 103
    GREATE     shift, and go to state 104
    EQ         shift, and go to state 105
    NEQ        shift, and go to state 106


State 111

   45 callout_arg_list: COMMA . callout_arg callout_arg_list

    CALLOUT     shift, and go to state 49
    BOOL_LIT    shift, and go to state 67
    CHAR_LIT    shift, and go to state 68
    STRING_LIT  shift, and go to state 134
    ID          shift, and go to state 55
    INT_LIT     shift, and go to state 69
    OPEN_P      shift, and go to state 70
    NOT         shift, and go to state 71
    MINUS       shift, and go to state 72

    method_call  go to state 73
    callout_arg  go to state 135
    location     go to state 74
    expr         go to state 136
    literal      go to state 76


State 112

   39 method_call: CALLOUT OPEN_P STRING_LIT callout_arg_list . CLOSE_P

    CLOSE_P  shift, and go to state 137


State 113

   27 statement: IF OPEN_P expr CLOSE_P . block
   28          | IF OPEN_P expr CLOSE_P . block ELSE block

    OPEN_CB  shift, and go to state 37

    block  go to state 138


State 114

   29 statement: FOR ID ASSIGN expr . COMMA expr block
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    COMMA   shift, and go to state 139
    AND     shift, and go to state 94
    OR      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    MULT    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    LESS    shift, and go to state 101
    GREAT   shift, and go to state 102
    LESSE   shift, and go to state 103
    GREATE  shift, and go to state 104
    EQ      shift, and go to state 105
    NEQ     shift, and go to state 106


State 115

   68 expr: OPEN_P expr CLOSE_P .

    $default  reduce using rule 68 (expr)


State 116

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr
   65     | expr AND expr .

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    MULT    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    LESS    shift, and go to state 101
    GREAT   shift, and go to state 102
    LESSE   shift, and go to state 103
    GREATE  shift, and go to state 104

    $default  reduce using rule 65 (expr)


State 117

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   64     | expr OR expr .
   65     | expr . AND expr

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    MULT    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    LESS    shift, and go to state 101
    GREAT   shift, and go to state 102
    LESSE   shift, and go to state 103
    GREATE  shift, and go to state 104

    $default  reduce using rule 64 (expr)


State 118

   53 expr: expr . PLUS expr
   53     | expr PLUS expr .
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 53 (expr)


State 119

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   54     | expr MINUS expr .
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 54 (expr)


State 120

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   55     | expr MULT expr .
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    $default  reduce using rule 55 (expr)


State 121

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   56     | expr DIV expr .
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    $default  reduce using rule 56 (expr)


State 122

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   57     | expr MOD expr .
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    $default  reduce using rule 57 (expr)


State 123

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   58     | expr LESS expr .
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MULT   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 58 (expr)


State 124

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   59     | expr GREAT expr .
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MULT   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 59 (expr)


State 125

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   60     | expr LESSE expr .
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MULT   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 60 (expr)


State 126

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   61     | expr GREATE expr .
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    MULT   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 61 (expr)


State 127

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   62     | expr EQ expr .
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    AND     shift, and go to state 94
    OR      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    MULT    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    LESS    shift, and go to state 101
    GREAT   shift, and go to state 102
    LESSE   shift, and go to state 103
    GREATE  shift, and go to state 104

    $default  reduce using rule 62 (expr)


State 128

   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   63     | expr NEQ expr .
   64     | expr . OR expr
   65     | expr . AND expr

    AND     shift, and go to state 94
    OR      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    MULT    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    LESS    shift, and go to state 101
    GREAT   shift, and go to state 102
    LESSE   shift, and go to state 103
    GREATE  shift, and go to state 104

    $default  reduce using rule 63 (expr)


State 129

   49 location: ID OPEN_SB expr CLOSE_SB .

    $default  reduce using rule 49 (location)


State 130

   38 method_call: ID OPEN_P method_call_arg_list CLOSE_P .

    $default  reduce using rule 38 (method_call)


State 131

   43 method_call_arg: COMMA . expr method_call_arg

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 140
    literal      go to state 76


State 132

   41 method_call_arg_list: expr method_call_arg .

    $default  reduce using rule 41 (method_call_arg_list)


State 133

   25 statement: location assign_op expr SEMICOLON .

    $default  reduce using rule 25 (statement)


State 134

   47 callout_arg: STRING_LIT .

    $default  reduce using rule 47 (callout_arg)


State 135

   45 callout_arg_list: COMMA callout_arg . callout_arg_list

    COMMA  shift, and go to state 111

    $default  reduce using rule 44 (callout_arg_list)

    callout_arg_list  go to state 141


State 136

   46 callout_arg: expr .
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    AND     shift, and go to state 94
    OR      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    MULT    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    LESS    shift, and go to state 101
    GREAT   shift, and go to state 102
    LESSE   shift, and go to state 103
    GREATE  shift, and go to state 104
    EQ      shift, and go to state 105
    NEQ     shift, and go to state 106

    $default  reduce using rule 46 (callout_arg)


State 137

   39 method_call: CALLOUT OPEN_P STRING_LIT callout_arg_list CLOSE_P .

    $default  reduce using rule 39 (method_call)


State 138

   27 statement: IF OPEN_P expr CLOSE_P block .
   28          | IF OPEN_P expr CLOSE_P block . ELSE block

    ELSE  shift, and go to state 142

    $default  reduce using rule 27 (statement)


State 139

   29 statement: FOR ID ASSIGN expr COMMA . expr block

    CALLOUT   shift, and go to state 49
    BOOL_LIT  shift, and go to state 67
    CHAR_LIT  shift, and go to state 68
    ID        shift, and go to state 55
    INT_LIT   shift, and go to state 69
    OPEN_P    shift, and go to state 70
    NOT       shift, and go to state 71
    MINUS     shift, and go to state 72

    method_call  go to state 73
    location     go to state 74
    expr         go to state 143
    literal      go to state 76


State 140

   43 method_call_arg: COMMA expr . method_call_arg
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    COMMA   shift, and go to state 131
    AND     shift, and go to state 94
    OR      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    MULT    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    LESS    shift, and go to state 101
    GREAT   shift, and go to state 102
    LESSE   shift, and go to state 103
    GREATE  shift, and go to state 104
    EQ      shift, and go to state 105
    NEQ     shift, and go to state 106

    $default  reduce using rule 42 (method_call_arg)

    method_call_arg  go to state 144


State 141

   45 callout_arg_list: COMMA callout_arg callout_arg_list .

    $default  reduce using rule 45 (callout_arg_list)


State 142

   28 statement: IF OPEN_P expr CLOSE_P block ELSE . block

    OPEN_CB  shift, and go to state 37

    block  go to state 145


State 143

   29 statement: FOR ID ASSIGN expr COMMA expr . block
   53 expr: expr . PLUS expr
   54     | expr . MINUS expr
   55     | expr . MULT expr
   56     | expr . DIV expr
   57     | expr . MOD expr
   58     | expr . LESS expr
   59     | expr . GREAT expr
   60     | expr . LESSE expr
   61     | expr . GREATE expr
   62     | expr . EQ expr
   63     | expr . NEQ expr
   64     | expr . OR expr
   65     | expr . AND expr

    OPEN_CB  shift, and go to state 37
    AND      shift, and go to state 94
    OR       shift, and go to state 95
    PLUS     shift, and go to state 96
    MINUS    shift, and go to state 97
    MULT     shift, and go to state 98
    DIV      shift, and go to state 99
    MOD      shift, and go to state 100
    LESS     shift, and go to state 101
    GREAT    shift, and go to state 102
    LESSE    shift, and go to state 103
    GREATE   shift, and go to state 104
    EQ       shift, and go to state 105
    NEQ      shift, and go to state 106

    block  go to state 146


State 144

   43 method_call_arg: COMMA expr method_call_arg .

    $default  reduce using rule 43 (method_call_arg)


State 145

   28 statement: IF OPEN_P expr CLOSE_P block ELSE block .

    $default  reduce using rule 28 (statement)


State 146

   29 statement: FOR ID ASSIGN expr COMMA expr block .

    $default  reduce using rule 29 (statement)
